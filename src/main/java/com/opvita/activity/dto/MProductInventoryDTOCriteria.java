package com.opvita.activity.dto;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class MProductInventoryDTOCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CULSITE.M_PRODUCT_INVENTORY
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CULSITE.M_PRODUCT_INVENTORY
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CULSITE.M_PRODUCT_INVENTORY
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CULSITE.M_PRODUCT_INVENTORY
     *
     * @mbggenerated
     */
    public MProductInventoryDTOCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CULSITE.M_PRODUCT_INVENTORY
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CULSITE.M_PRODUCT_INVENTORY
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CULSITE.M_PRODUCT_INVENTORY
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CULSITE.M_PRODUCT_INVENTORY
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CULSITE.M_PRODUCT_INVENTORY
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CULSITE.M_PRODUCT_INVENTORY
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CULSITE.M_PRODUCT_INVENTORY
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CULSITE.M_PRODUCT_INVENTORY
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CULSITE.M_PRODUCT_INVENTORY
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CULSITE.M_PRODUCT_INVENTORY
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CULSITE.M_PRODUCT_INVENTORY
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andMpiIdIsNull() {
            addCriterion("MPI_ID is null");
            return (Criteria) this;
        }

        public Criteria andMpiIdIsNotNull() {
            addCriterion("MPI_ID is not null");
            return (Criteria) this;
        }

        public Criteria andMpiIdEqualTo(String value) {
            addCriterion("MPI_ID =", value, "mpiId");
            return (Criteria) this;
        }

        public Criteria andMpiIdNotEqualTo(String value) {
            addCriterion("MPI_ID <>", value, "mpiId");
            return (Criteria) this;
        }

        public Criteria andMpiIdGreaterThan(String value) {
            addCriterion("MPI_ID >", value, "mpiId");
            return (Criteria) this;
        }

        public Criteria andMpiIdGreaterThanOrEqualTo(String value) {
            addCriterion("MPI_ID >=", value, "mpiId");
            return (Criteria) this;
        }

        public Criteria andMpiIdLessThan(String value) {
            addCriterion("MPI_ID <", value, "mpiId");
            return (Criteria) this;
        }

        public Criteria andMpiIdLessThanOrEqualTo(String value) {
            addCriterion("MPI_ID <=", value, "mpiId");
            return (Criteria) this;
        }

        public Criteria andMpiIdLike(String value) {
            addCriterion("MPI_ID like", value, "mpiId");
            return (Criteria) this;
        }

        public Criteria andMpiIdNotLike(String value) {
            addCriterion("MPI_ID not like", value, "mpiId");
            return (Criteria) this;
        }

        public Criteria andMpiIdIn(List<String> values) {
            addCriterion("MPI_ID in", values, "mpiId");
            return (Criteria) this;
        }

        public Criteria andMpiIdNotIn(List<String> values) {
            addCriterion("MPI_ID not in", values, "mpiId");
            return (Criteria) this;
        }

        public Criteria andMpiIdBetween(String value1, String value2) {
            addCriterion("MPI_ID between", value1, value2, "mpiId");
            return (Criteria) this;
        }

        public Criteria andMpiIdNotBetween(String value1, String value2) {
            addCriterion("MPI_ID not between", value1, value2, "mpiId");
            return (Criteria) this;
        }

        public Criteria andMpiProductIdIsNull() {
            addCriterion("MPI_PRODUCT_ID is null");
            return (Criteria) this;
        }

        public Criteria andMpiProductIdIsNotNull() {
            addCriterion("MPI_PRODUCT_ID is not null");
            return (Criteria) this;
        }

        public Criteria andMpiProductIdEqualTo(String value) {
            addCriterion("MPI_PRODUCT_ID =", value, "mpiProductId");
            return (Criteria) this;
        }

        public Criteria andMpiProductIdNotEqualTo(String value) {
            addCriterion("MPI_PRODUCT_ID <>", value, "mpiProductId");
            return (Criteria) this;
        }

        public Criteria andMpiProductIdGreaterThan(String value) {
            addCriterion("MPI_PRODUCT_ID >", value, "mpiProductId");
            return (Criteria) this;
        }

        public Criteria andMpiProductIdGreaterThanOrEqualTo(String value) {
            addCriterion("MPI_PRODUCT_ID >=", value, "mpiProductId");
            return (Criteria) this;
        }

        public Criteria andMpiProductIdLessThan(String value) {
            addCriterion("MPI_PRODUCT_ID <", value, "mpiProductId");
            return (Criteria) this;
        }

        public Criteria andMpiProductIdLessThanOrEqualTo(String value) {
            addCriterion("MPI_PRODUCT_ID <=", value, "mpiProductId");
            return (Criteria) this;
        }

        public Criteria andMpiProductIdLike(String value) {
            addCriterion("MPI_PRODUCT_ID like", value, "mpiProductId");
            return (Criteria) this;
        }

        public Criteria andMpiProductIdNotLike(String value) {
            addCriterion("MPI_PRODUCT_ID not like", value, "mpiProductId");
            return (Criteria) this;
        }

        public Criteria andMpiProductIdIn(List<String> values) {
            addCriterion("MPI_PRODUCT_ID in", values, "mpiProductId");
            return (Criteria) this;
        }

        public Criteria andMpiProductIdNotIn(List<String> values) {
            addCriterion("MPI_PRODUCT_ID not in", values, "mpiProductId");
            return (Criteria) this;
        }

        public Criteria andMpiProductIdBetween(String value1, String value2) {
            addCriterion("MPI_PRODUCT_ID between", value1, value2, "mpiProductId");
            return (Criteria) this;
        }

        public Criteria andMpiProductIdNotBetween(String value1, String value2) {
            addCriterion("MPI_PRODUCT_ID not between", value1, value2, "mpiProductId");
            return (Criteria) this;
        }

        public Criteria andMpiStoreIsNull() {
            addCriterion("MPI_STORE is null");
            return (Criteria) this;
        }

        public Criteria andMpiStoreIsNotNull() {
            addCriterion("MPI_STORE is not null");
            return (Criteria) this;
        }

        public Criteria andMpiStoreEqualTo(Long value) {
            addCriterion("MPI_STORE =", value, "mpiStore");
            return (Criteria) this;
        }

        public Criteria andMpiStoreNotEqualTo(Long value) {
            addCriterion("MPI_STORE <>", value, "mpiStore");
            return (Criteria) this;
        }

        public Criteria andMpiStoreGreaterThan(Long value) {
            addCriterion("MPI_STORE >", value, "mpiStore");
            return (Criteria) this;
        }

        public Criteria andMpiStoreGreaterThanOrEqualTo(Long value) {
            addCriterion("MPI_STORE >=", value, "mpiStore");
            return (Criteria) this;
        }

        public Criteria andMpiStoreLessThan(Long value) {
            addCriterion("MPI_STORE <", value, "mpiStore");
            return (Criteria) this;
        }

        public Criteria andMpiStoreLessThanOrEqualTo(Long value) {
            addCriterion("MPI_STORE <=", value, "mpiStore");
            return (Criteria) this;
        }

        public Criteria andMpiStoreIn(List<Long> values) {
            addCriterion("MPI_STORE in", values, "mpiStore");
            return (Criteria) this;
        }

        public Criteria andMpiStoreNotIn(List<Long> values) {
            addCriterion("MPI_STORE not in", values, "mpiStore");
            return (Criteria) this;
        }

        public Criteria andMpiStoreBetween(Long value1, Long value2) {
            addCriterion("MPI_STORE between", value1, value2, "mpiStore");
            return (Criteria) this;
        }

        public Criteria andMpiStoreNotBetween(Long value1, Long value2) {
            addCriterion("MPI_STORE not between", value1, value2, "mpiStore");
            return (Criteria) this;
        }

        public Criteria andMpiSaleNumIsNull() {
            addCriterion("MPI_SALE_NUM is null");
            return (Criteria) this;
        }

        public Criteria andMpiSaleNumIsNotNull() {
            addCriterion("MPI_SALE_NUM is not null");
            return (Criteria) this;
        }

        public Criteria andMpiSaleNumEqualTo(Long value) {
            addCriterion("MPI_SALE_NUM =", value, "mpiSaleNum");
            return (Criteria) this;
        }

        public Criteria andMpiSaleNumNotEqualTo(Long value) {
            addCriterion("MPI_SALE_NUM <>", value, "mpiSaleNum");
            return (Criteria) this;
        }

        public Criteria andMpiSaleNumGreaterThan(Long value) {
            addCriterion("MPI_SALE_NUM >", value, "mpiSaleNum");
            return (Criteria) this;
        }

        public Criteria andMpiSaleNumGreaterThanOrEqualTo(Long value) {
            addCriterion("MPI_SALE_NUM >=", value, "mpiSaleNum");
            return (Criteria) this;
        }

        public Criteria andMpiSaleNumLessThan(Long value) {
            addCriterion("MPI_SALE_NUM <", value, "mpiSaleNum");
            return (Criteria) this;
        }

        public Criteria andMpiSaleNumLessThanOrEqualTo(Long value) {
            addCriterion("MPI_SALE_NUM <=", value, "mpiSaleNum");
            return (Criteria) this;
        }

        public Criteria andMpiSaleNumIn(List<Long> values) {
            addCriterion("MPI_SALE_NUM in", values, "mpiSaleNum");
            return (Criteria) this;
        }

        public Criteria andMpiSaleNumNotIn(List<Long> values) {
            addCriterion("MPI_SALE_NUM not in", values, "mpiSaleNum");
            return (Criteria) this;
        }

        public Criteria andMpiSaleNumBetween(Long value1, Long value2) {
            addCriterion("MPI_SALE_NUM between", value1, value2, "mpiSaleNum");
            return (Criteria) this;
        }

        public Criteria andMpiSaleNumNotBetween(Long value1, Long value2) {
            addCriterion("MPI_SALE_NUM not between", value1, value2, "mpiSaleNum");
            return (Criteria) this;
        }

        public Criteria andCreateUserIsNull() {
            addCriterion("CREATE_USER is null");
            return (Criteria) this;
        }

        public Criteria andCreateUserIsNotNull() {
            addCriterion("CREATE_USER is not null");
            return (Criteria) this;
        }

        public Criteria andCreateUserEqualTo(String value) {
            addCriterion("CREATE_USER =", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotEqualTo(String value) {
            addCriterion("CREATE_USER <>", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserGreaterThan(String value) {
            addCriterion("CREATE_USER >", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserGreaterThanOrEqualTo(String value) {
            addCriterion("CREATE_USER >=", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserLessThan(String value) {
            addCriterion("CREATE_USER <", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserLessThanOrEqualTo(String value) {
            addCriterion("CREATE_USER <=", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserLike(String value) {
            addCriterion("CREATE_USER like", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotLike(String value) {
            addCriterion("CREATE_USER not like", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserIn(List<String> values) {
            addCriterion("CREATE_USER in", values, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotIn(List<String> values) {
            addCriterion("CREATE_USER not in", values, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserBetween(String value1, String value2) {
            addCriterion("CREATE_USER between", value1, value2, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotBetween(String value1, String value2) {
            addCriterion("CREATE_USER not between", value1, value2, "createUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserIsNull() {
            addCriterion("UPDATE_USER is null");
            return (Criteria) this;
        }

        public Criteria andUpdateUserIsNotNull() {
            addCriterion("UPDATE_USER is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateUserEqualTo(String value) {
            addCriterion("UPDATE_USER =", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotEqualTo(String value) {
            addCriterion("UPDATE_USER <>", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserGreaterThan(String value) {
            addCriterion("UPDATE_USER >", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserGreaterThanOrEqualTo(String value) {
            addCriterion("UPDATE_USER >=", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserLessThan(String value) {
            addCriterion("UPDATE_USER <", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserLessThanOrEqualTo(String value) {
            addCriterion("UPDATE_USER <=", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserLike(String value) {
            addCriterion("UPDATE_USER like", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotLike(String value) {
            addCriterion("UPDATE_USER not like", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserIn(List<String> values) {
            addCriterion("UPDATE_USER in", values, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotIn(List<String> values) {
            addCriterion("UPDATE_USER not in", values, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserBetween(String value1, String value2) {
            addCriterion("UPDATE_USER between", value1, value2, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotBetween(String value1, String value2) {
            addCriterion("UPDATE_USER not between", value1, value2, "updateUser");
            return (Criteria) this;
        }

        public Criteria andCreateTimestampIsNull() {
            addCriterion("CREATE_TIMESTAMP is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimestampIsNotNull() {
            addCriterion("CREATE_TIMESTAMP is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimestampEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_TIMESTAMP =", value, "createTimestamp");
            return (Criteria) this;
        }

        public Criteria andCreateTimestampNotEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_TIMESTAMP <>", value, "createTimestamp");
            return (Criteria) this;
        }

        public Criteria andCreateTimestampGreaterThan(Date value) {
            addCriterionForJDBCDate("CREATE_TIMESTAMP >", value, "createTimestamp");
            return (Criteria) this;
        }

        public Criteria andCreateTimestampGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_TIMESTAMP >=", value, "createTimestamp");
            return (Criteria) this;
        }

        public Criteria andCreateTimestampLessThan(Date value) {
            addCriterionForJDBCDate("CREATE_TIMESTAMP <", value, "createTimestamp");
            return (Criteria) this;
        }

        public Criteria andCreateTimestampLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_TIMESTAMP <=", value, "createTimestamp");
            return (Criteria) this;
        }

        public Criteria andCreateTimestampIn(List<Date> values) {
            addCriterionForJDBCDate("CREATE_TIMESTAMP in", values, "createTimestamp");
            return (Criteria) this;
        }

        public Criteria andCreateTimestampNotIn(List<Date> values) {
            addCriterionForJDBCDate("CREATE_TIMESTAMP not in", values, "createTimestamp");
            return (Criteria) this;
        }

        public Criteria andCreateTimestampBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATE_TIMESTAMP between", value1, value2, "createTimestamp");
            return (Criteria) this;
        }

        public Criteria andCreateTimestampNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATE_TIMESTAMP not between", value1, value2, "createTimestamp");
            return (Criteria) this;
        }

        public Criteria andUpdateTimestampIsNull() {
            addCriterion("UPDATE_TIMESTAMP is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimestampIsNotNull() {
            addCriterion("UPDATE_TIMESTAMP is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimestampEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_TIMESTAMP =", value, "updateTimestamp");
            return (Criteria) this;
        }

        public Criteria andUpdateTimestampNotEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_TIMESTAMP <>", value, "updateTimestamp");
            return (Criteria) this;
        }

        public Criteria andUpdateTimestampGreaterThan(Date value) {
            addCriterionForJDBCDate("UPDATE_TIMESTAMP >", value, "updateTimestamp");
            return (Criteria) this;
        }

        public Criteria andUpdateTimestampGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_TIMESTAMP >=", value, "updateTimestamp");
            return (Criteria) this;
        }

        public Criteria andUpdateTimestampLessThan(Date value) {
            addCriterionForJDBCDate("UPDATE_TIMESTAMP <", value, "updateTimestamp");
            return (Criteria) this;
        }

        public Criteria andUpdateTimestampLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_TIMESTAMP <=", value, "updateTimestamp");
            return (Criteria) this;
        }

        public Criteria andUpdateTimestampIn(List<Date> values) {
            addCriterionForJDBCDate("UPDATE_TIMESTAMP in", values, "updateTimestamp");
            return (Criteria) this;
        }

        public Criteria andUpdateTimestampNotIn(List<Date> values) {
            addCriterionForJDBCDate("UPDATE_TIMESTAMP not in", values, "updateTimestamp");
            return (Criteria) this;
        }

        public Criteria andUpdateTimestampBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("UPDATE_TIMESTAMP between", value1, value2, "updateTimestamp");
            return (Criteria) this;
        }

        public Criteria andUpdateTimestampNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("UPDATE_TIMESTAMP not between", value1, value2, "updateTimestamp");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CULSITE.M_PRODUCT_INVENTORY
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CULSITE.M_PRODUCT_INVENTORY
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}